<?xml version="1.0"?>
<configuration>
  <component id="Ets.SingleApi.Controllers.TestController"
    type="Ets.SingleApi.Controllers.TestController, Ets.SingleApi.Controllers" lifeStyle="Transient">
    <interceptors>
      <interceptor>${Ets.SingleApi.Interceptor.ControllerInterceptor}</interceptor>
    </interceptors>
  </component>
  <component id="Ets.SingleApi.Controllers.SmsController"
    type="Ets.SingleApi.Controllers.SmsController, Ets.SingleApi.Controllers" lifeStyle="Transient">
    <parameters>
      <smsServices>${Ets.SingleApi.Services.SmsServices}</smsServices>
    </parameters>
    <interceptors>
      <interceptor>${Ets.SingleApi.Interceptor.ControllerInterceptor}</interceptor>
    </interceptors>
  </component>
  <component id="Ets.SingleApi.Controllers.AuthenController"
        type="Ets.SingleApi.Controllers.AuthenController, Ets.SingleApi.Controllers" lifeStyle="Transient">
    <parameters>
      <authenServices>${Ets.SingleApi.Services.AuthenServices}</authenServices>
    </parameters>
    <interceptors>
      <interceptor>${Ets.SingleApi.Interceptor.ControllerInterceptor}</interceptor>
    </interceptors>
  </component>
  <component id="Ets.SingleApi.Controllers.UserController"
      type="Ets.SingleApi.Controllers.UserController, Ets.SingleApi.Controllers" lifeStyle="Transient">
    <parameters>
      <usersServices>${Ets.SingleApi.Services.UsersServices}</usersServices>
    </parameters>
    <interceptors>
      <interceptor>${Ets.SingleApi.Interceptor.ControllerInterceptor}</interceptor>
    </interceptors>
  </component>
  <component id="Ets.SingleApi.Controllers.BusinessAreaController"
        type="Ets.SingleApi.Controllers.BusinessAreaController, Ets.SingleApi.Controllers" lifeStyle="Transient">
    <parameters>
      <businessAreaServices>${Ets.SingleApi.Services.BusinessAreaServices}</businessAreaServices>
    </parameters>
    <interceptors>
      <interceptor>${Ets.SingleApi.Interceptor.ControllerInterceptor}</interceptor>
    </interceptors>
  </component>
  <component id="Ets.SingleApi.Controllers.CuisineController"
        type="Ets.SingleApi.Controllers.CuisineController, Ets.SingleApi.Controllers" lifeStyle="Transient">
    <parameters>
      <cuisineServices>${Ets.SingleApi.Services.CuisineServices}</cuisineServices>
    </parameters>
    <interceptors>
      <interceptor>${Ets.SingleApi.Interceptor.ControllerInterceptor}</interceptor>
    </interceptors>
  </component>
  <component id="Ets.SingleApi.Controllers.PaymentController"
      type="Ets.SingleApi.Controllers.PaymentController, Ets.SingleApi.Controllers" lifeStyle="Transient">
    <parameters>
      <cuisineServices>${Ets.SingleApi.Services.PaymentServices}</cuisineServices>
    </parameters>
    <interceptors>
      <interceptor>${Ets.SingleApi.Interceptor.ControllerInterceptor}</interceptor>
    </interceptors>
  </component>
  <component id="Ets.SingleApi.Controllers.Wap.WapSupplierController"
        type="Ets.SingleApi.Controllers.Wap.WapSupplierController, Ets.SingleApi.Controllers" lifeStyle="Transient">
    <parameters>
      <supplierServices>${Ets.SingleApi.Services.SupplierServices}</supplierServices>
    </parameters>
    <interceptors>
      <interceptor>${Ets.SingleApi.Interceptor.WapControllerInterceptor}</interceptor>
    </interceptors>
  </component>
  <component id="Ets.SingleApi.Controllers.Wap.WapOrdersController"
      type="Ets.SingleApi.Controllers.Wap.WapOrdersController, Ets.SingleApi.Controllers" lifeStyle="Transient">
    <parameters>
      <orderServices>${Ets.SingleApi.Services.OrderServices}</orderServices>
    </parameters>
    <interceptors>
      <interceptor>${Ets.SingleApi.Interceptor.WapControllerInterceptor}</interceptor>
    </interceptors>
  </component>
</configuration>